# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pG0Qu4Q7QBzczRU-1xkyBivJq7ALLu1g

# Kenar Tespiti
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab import files
from PIL import Image

#Resim yüklemesi
uploaded = files.upload()
filename = next(iter(uploaded))

# Resmi OpenCV ile oku ve griye çevir
image = cv2.imread(filename)
gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
blurred = cv2.GaussianBlur(gray, (5, 5), 1.4)

median_val = np.median(blurred)

lower = int(max(0, 0.66 * median_val))
upper = int(min(255, 1.33 * median_val))

edges = cv2.Canny(blurred, lower, upper)

# Sonucu görüntüle
plt.figure(figsize=(10,5))
plt.subplot(1,2,1)
plt.title("Orijinal")
plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))
plt.axis("off")

plt.subplot(1,2,2)
plt.title("Kenar Tespiti")
plt.imshow(edges, cmap='gray')
plt.axis("off")
plt.show()

# Sonucu kaydet
output_file = 'kenar_tespit_sonuç.png'
cv2.imwrite(output_file, edges)

# İndirilebilir hale getir
files.download(output_file)

"""# Transparan ve Final Hali"""

from PIL import Image
from google.colab import files

#Dosya yükle
uploaded = files.upload()
filename = next(iter(uploaded))

#Resmi RGBA (şeffaflık destekli) olarak aç
image = Image.open(filename).convert("RGBA")

#Piksel verisini al
data = image.getdata()

new_data = []
for item in data:
    # Eğer piksel siyahsa (RGB = 0,0,0), alpha = 0 yap (tamamen şeffaf)
    if item[0] == 0 and item[1] == 0 and item[2] == 0:
        new_data.append((0, 0, 0, 0))  # şeffaf
    else:
        new_data.append(item)
image.putdata(new_data)

data = image.getdata()
new_data = []
for item in data:
    # Eğer beyazsa (255,255,255), siyaha çevir
    if item[0] == 255 and item[1] == 255 and item[2] == 255:
        new_data.append((0, 0, 0,255))
    else:
        new_data.append(item)

#Yeni veriyi uygula
image.putdata(new_data)

#Kaydet ve indir
output_filename = "LTG_DarkTheme_Son.png"
image.save(output_filename, "PNG")
files.download(output_filename)